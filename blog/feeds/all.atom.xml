<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>協同產品設計實習40423143楊智勝</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-06-01T12:08:00+08:00</updated><entry><title>協同產品設計實習 第十五週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-shi-wu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-06-01T12:08:00+08:00</published><updated>2017-06-01T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-06-01:./xie-tong-chan-pin-she-ji-shi-xi-di-shi-wu-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;齒輪組的囓合協同繪圖&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h2&gt;協同產品設計實習課程 第十五週&lt;/h2&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="black"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 250
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "red")

ctx.beginPath()
ctx.fillStyle = "   #ffdb72"
ctx.font = "50px ScriptS"
ctx.fillText("40423143 ",300,300)
ctx.stroke()

&lt;/script&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear2_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 7
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)

        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a

        rb=rp*math.cos(pa*deg)

        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
ctx.beginPath() 
ctx.lineWidth="600"
ctx.strokeStyle="white"
ctx.moveTo(0,600) 
ctx.lineTo(800,600) 
ctx.stroke()

ctx.beginPath() 
ctx.lineWidth="3"
ctx.strokeStyle="red"
ctx.moveTo(0,300) 
ctx.lineTo(800,300) 
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423143 ",330,450)
ctx.stroke()

&lt;/script&gt;

&lt;h1&gt;齒輪協同繪製過程影片:&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/220115354" width="640" height="361" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/220115354"&gt;國立虎尾科技大學 機械設計工程系 協同產品設計實習 40423143 第十五週齒輪協同繪製&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;心得:用好前面二個零件後,後面協同才
是比較麻煩的必須等所有組員畫完才能做組合協同&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第十三週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-shi-san-zhou-zuo-ye.html" rel="alternate"></link><published>2017-05-18T12:08:00+08:00</published><updated>2017-05-18T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-05-18:./xie-tong-chan-pin-she-ji-shi-xi-di-shi-san-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;Brython 正齒輪齒面寬輔助設計程式&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h2&gt;協同產品設計實習課程 第十三週&lt;/h2&gt;
&lt;p&gt;各班給兩台實體電腦, 從 Ubuntu 16.04 裝起, 配置正齒輪齒面寬輔助設計程式, 然後設法延伸此網際輔助設計程式, 配置 V-rep、Leo Editor、Fossil SCM server 以及 Nginx 加上以 uwsgi 配置 Python3 網際程式等系統. - 由 WCM 課程學員負責配置好硬體與操作系統, 然後逐步放入網際內容管理系統後, 分別為協同產品設計實習各學員建立帳號, 然後試著完成上述各系統與伺服器的建立.&lt;/p&gt;
&lt;p&gt;上課心得:協同的重要性的成分未來只會更多,我們必需更懂如何透過程式來整合所學的一切&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第十二週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-shi-er-zhou-zuo-ye.html" rel="alternate"></link><published>2017-05-11T12:08:00+08:00</published><updated>2017-05-11T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-05-11:./xie-tong-chan-pin-she-ji-shi-xi-di-shi-er-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;Brython 繪製三個正齒輪廓嚙合&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;三種正齒輪嚙合&lt;/p&gt;


&lt;h2&gt;協同產品設計實習課程 第十二週&lt;/h2&gt;
&lt;script src="./../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="./../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;p&gt;&lt;input id="n1" value="13"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n2" value="11"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;input id="n3" value="17"&gt;&lt;/input&gt;&lt;br /&gt;
&lt;button id="button"&gt;Set Number of Gears&lt;/button&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)

canvas = doc['onegear']
ctx = canvas.getContext("2d")

# 以 button 驅動的事件函式
def setgearnumber(e):
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    x = (canvas.width)/2
    y = (canvas.height)/2
    if doc["n1"].value.isdigit():
        n17 = int(doc["n1"].value)
    else:
        n17 = 17

    if doc["n2"].value.isdigit():
        n11 = int(doc["n2"].value)
    else:
        n11 = 11

    if doc["n3"].value.isdigit():
        n13 = int(doc["n3"].value)
    else:
        n13 = 13

    # 只使用畫布高度的 80%
    canvas_size = canvas.height*0.4
    r17 = canvas_size*n17/(n17+n11+n13)
    r11 = canvas_size*n11/(n17+n11+n13)
    r13 = canvas_size*n13/(n17+n11+n13)
    # 計算各齒輪中心座標
    x17 = x - r17-r11
    y17 = y

    x11 = x 
    y11 = y

    x13 = x + r11+r13
    y13 = y

    pa = 20
    # 開始繪製齒輪
    # 儲存原有的座標系統
    ctx.save()
    # 平移到齒輪圓心
    ctx.translate(x17, y17)
    # 以齒輪圓心旋轉 90 度, 讓紅色標線在齒輪右側保持水平
    ctx.rotate(90*deg)
    # 平移回原來的座標原點
    ctx.translate(-x17, -y17)
    gear17 = Spur(ctx).Gear(x17, y17, r17, n17, pa, "blue")
    # 回復原有的座標系統
    ctx.restore()

    ctx.save()
    ctx.translate(x11, y11)
    # 中間齒輪轉動 -90 度加上一齒, 可以與左側齒輪囓合
    ctx.rotate(-90*deg-math.pi/n11)
    ctx.translate(-x11, -y11)
    gear11 = Spur(ctx).Gear(x11, y11, r11, n11, pa, "blue")
    ctx.restore()

    ctx.save()
    ctx.translate(x13, y13)
    # 右側齒輪轉動 -90 度加上一齒, 可以與原來標線在左側水平的中間齒輪囓合, 但是目前中間齒輪的標線已經轉了 180 度加或減一次
    # 必須配合兩齒的速比轉換旋轉角, 以便讓中間齒輪與右側齒輪囓合
    ctx.rotate(-90*deg-math.pi/n13+(180*deg+math.pi/n11)*n11/n13)
    ctx.translate(-x13, -y13)
    gear13 = Spur(ctx).Gear(x13, y13, r13, n13, pa, "blue")
    ctx.restore()

setgearnumber(True)

'''
div = doc["onegear_div"]
form = html.FORM()
input1 = html.INPUT(type="text", id="n1", name="n1", value="13")
input2 = html.INPUT(type="text", id="n2", name="n2", value="11")
input3 = html.INPUT(type="text", id="n3", name="n3", value="19")
div &lt;= input1 + html.BR() + input2 + html.BR() + input3
'''
doc['button'].bind('click',setgearnumber)
&lt;/script&gt;

&lt;p&gt;心得:第十二週作業為畫三齒輪嚙合,過程聽老師講解之後實際操作後才會知道程式的問題&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第十一週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-shi-yi-zhou-zuo-ye.html" rel="alternate"></link><published>2017-05-04T12:08:00+08:00</published><updated>2017-05-04T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-05-04:./xie-tong-chan-pin-she-ji-shi-xi-di-shi-yi-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;Brython 繪製單一正齒輪廓&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;p&gt;結合 &lt;a href="https://github.com/brython-dev/brython/releases/tag/3.3.1"&gt;Brython 3.3.1&lt;/a&gt; 與 &lt;a href="./../data/w11/cango/Cango-9v05.js"&gt;Cango-9v05.js&lt;/a&gt; 繪圖, 將 &lt;a href="http://www.arc.id.au/CanvasGraphics.html"&gt;Cango Canvas 繪圖範例&lt;/a&gt;轉為 Brython.&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;&lt;a href="http://www.arc.id.au"&gt;Cango 程式庫&lt;/a&gt;&lt;/h3&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="./../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="./../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- Cango 程式庫 --&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/Cango-9v05-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAxes-2v09.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAnimation-5v00.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="cango_canvas" width="800" height="60"&gt;&lt;/canvas&gt;

&lt;div id="cango_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new
# 利用 browser 中的 document 擷取 id = "cango_div" 的標註
cango_div = doc["cango_div"]
def sayHullo(cvsID):
    # create a graphics context
    cgo = cango(cvsID) 
    # use RH Cartesian on full canvas
    cgo.setGridboxRHC() 
    # Different X and Y scale
    cgo.setWorldCoords(-10, -5, 20, 10)
    cgo.drawText("以 Cango 顯示中文", {
        'fillColor': "blue",
        'fontSize': 58,
        'lorg':5 })
sayHullo("cango_canvas")
cango_div &lt;= "以 Brython 顯示中文"
&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;
上述 Cango 與 Brython 文字列印程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="./../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- Cango 程式庫 --&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/Cango-9v05-min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAxes-2v09.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAnimation-5v00.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="cango_canvas" width="800" height="60"&gt;&lt;/canvas&gt;
&lt;div id="cango_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new
# 利用 browser 中的 document 擷取 id = "cango_div" 的標註
cango_div = doc["cango_div"]
def sayHullo(cvsID):
    # create a graphics context
    cgo = cango(cvsID) 
    # use RH Cartesian on full canvas
    cgo.setGridboxRHC() 
    # Different X and Y scale
    cgo.setWorldCoords(-10, -5, 20, 10)
    cgo.drawText("以 Cango 顯示中文", {
        'fillColor': "blue",
        'fontSize': 58,
        'lorg':5 })
sayHullo("cango_canvas")
cango_div &lt;= "以 Brython 顯示中文"
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;Cango drawPath 範例:&lt;/p&gt;
&lt;canvas id="cango_canvas1" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new

def plotSine(cvsID):
    data = []
    g = cango(cvsID)
    g.setGridboxRHC(10, 10, 80, 60)
    g.setWorldCoords(0, -50, 2*math.pi, 100)
    g.drawAxes(0, 6.5, -50, 50, {
    'xOrigin':0, 'yOrigin':0,
    'fontSize':10,
    'strokeColor':'gray'})
    for i in range(int(2*math.pi/0.03)):
        #[0, 0.03, 0.06 ... 3.14159]
        i = i * 0.03
        # 特別注意在 Javascript 採用 data.push(i, 50*math.sin(i)), 但是 Python 必須分為兩段 append
        data.append(i)
        data.append(50*math.sin(i))
    g.drawPath(data, {'strokeColor':'red'})
plotSine("cango_canvas1")
&lt;/script&gt;

&lt;p&gt;以上繪圖程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;canvas id="cango_canvas1" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new

def plotSine(cvsID):
    data = []
    g = cango(cvsID)
    g.setGridboxRHC(10, 10, 80, 60)
    g.setWorldCoords(0, -50, 2*math.pi, 100)
    g.drawAxes(0, 6.5, -50, 50, {
    'xOrigin':0, 'yOrigin':0,
    'fontSize':10,
    'strokeColor':'gray'})
    for i in range(int(2*math.pi/0.03)):
        #[0, 0.03, 0.06 ... 3.14159]
        i = i * 0.03
        # 特別注意在 Javascript 採用 data.push(i, 50*math.sin(i)), 但是 Python 必須分為兩段 append
        data.append(i)
        data.append(50*math.sin(i))
    g.drawPath(data, {'strokeColor':'red'})
plotSine("cango_canvas1")
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;重用 Cango 繪圖物件:&lt;/p&gt;
&lt;canvas id="cango_canvas2" width="800" height="800"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new
shape = window.Shape.new
shapedefs = window.shapeDefs

def drawSpiral(cvsID):
    g = cango(cvsID)
    chamber = ['M',289.16,447.14,
                 'C',233.33,399.03, 267.47,290.34, 364.53,265.28,
                     408.88,269.91, 448.14,282.58, 483.22,303.79,
                     391.79,287.12, 292.99,369.50, 331.90,451.11,
                     318.79,447.43, 302.35,446.61, 289.16,447.14, 'z']
    cobj = shape(chamber, {
        'fillColor':"lightyellow",
        'strokeColor':"tan",
        'lineWidthWC':4,
        'border':True })
    cobj.translate(-287, -536)
    g.setGridboxSVG()
    g.setWorldCoords(-250, -320, 500)
    # draw the spiral center dot
    g.drawShape(shapedefs.circle(8), {'fillColor':"tan"})
    # draw the 50 spiral segments
    scale = 1
    for i in range(50):
        scale = scale/1.08
        g.render(cobj, {'scl':scale, 'degs':i*24.5})

drawSpiral("cango_canvas2")
&lt;/script&gt;

&lt;p&gt;上述繪圖程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;canvas id="cango_canvas2" width="800" height="800"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import window
import math
# 利用 window 擷取 Cango 物件, 然後以 new 方法轉為 Brython 物件
cango = window.Cango.new
shape = window.Shape.new
shapedefs = window.shapeDefs

def drawSpiral(cvsID):
    g = cango(cvsID)
    chamber = ['M',289.16,447.14,
                 'C',233.33,399.03, 267.47,290.34, 364.53,265.28,
                     408.88,269.91, 448.14,282.58, 483.22,303.79,
                     391.79,287.12, 292.99,369.50, 331.90,451.11,
                     318.79,447.43, 302.35,446.61, 289.16,447.14, 'z']
    cobj = shape(chamber, {
        'fillColor':"lightyellow",
        'strokeColor':"tan",
        'lineWidthWC':4,
        'border':True })
    cobj.translate(-287, -536)
    g.setGridboxSVG()
    g.setWorldCoords(-250, -320, 500)
    # draw the spiral center dot
    g.drawShape(shapedefs.circle(8), {'fillColor':"tan"})
    # draw the 50 spiral segments
    scale = 1
    for i in range(50):
        scale = scale/1.08
        g.render(cobj, {'scl':scale, 'degs':i*24.5})

drawSpiral("cango_canvas2")
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;目前正透過 &lt;a href="https://github.com/mdecourse/kmol2018"&gt;https://github.com/mdecourse/kmol2018&lt;/a&gt; 測試 Windows 64 位元可攜 Python3.6.1 與 Brython 3.3.1 的應用, 已經發現 Pelican DISPLAY_PAGES_ON_MENU 無法運作, 且 Brython 3.3.1 在 Windows 環境中無法正確擷取字串值.&lt;/p&gt;
&lt;h3&gt;&lt;a href="http://snapsvg.io/"&gt;Snap 程式庫&lt;/a&gt;&lt;/h3&gt;
&lt;script type="text/javascript" src="./../data/w11/snap/snap.svg-min.js"&gt;&lt;/script&gt;

&lt;p&gt;&lt;svg id="svgout" width="800" height="500" viewBox="0 0 800 500"&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;script type="text/python"&gt;
from browser import alert
from browser import window, document
# 將 Snap 轉為 Brython 物件
snap = window.Snap.new
# 使用 id 為 "svgout" 的 svg 標註進行繪圖
s = snap("#svgout")

offsetY = 50

# 是否標示出繪圖範圍
#borderRect = s.rect(0,0,800,640,10,10).attr({ 'stroke': "silver", 'fill': "silver", 'strokeWidth': "3" })

g = s.group().transform('t250,120')
r0 = s.rect(150,150,100,100,20,20).attr({ 'fill': "orange", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c0 = s.circle(225,225,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4"  }).attr({ 'id': 'c0' })
g0 = s.group( r0,c0 ).attr({ 'id': 'g0' })
#g0.animate({ 'transform' : 't250,120r360,225,225' },4000)
g0.appendTo( g )
g0.animate({ 'transform' : 'r360,225,225' },4000)
# 讓 g0 可以拖動
g0.drag()

r1 = s.rect(100,100,100,100,20,20).attr({ 'fill': "red", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c1 = s.circle(175,175,10).attr({ 'fill': "silver", 'stroke': "black" , 'strokeWidth': "4"}).attr({ 'id': 'c1' })
g1 = s.group( r1,c1 ).attr({ 'id': 'g1' })
g1.appendTo( g0 ).attr({ 'id': 'g1' })
g1.animate({ 'transform' : 'r360,175,175' },4000)

r2 = s.rect(50,50,100,100,20,20).attr({ 'fill': "blue", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c2 = s.circle(125,125,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c2' })
g2 = s.group(r2,c2).attr({ 'id': 'g2' })

g2.appendTo( g1 );
g2.animate( { 'transform' : 'r360,125,125' },4000);

r3 = s.rect(0,0,100,100,20,20).attr({ 'fill': "yellow", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c3 = s.circle(75,75,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c3' })
g3 = s.group(r3,c3).attr({ 'id': 'g3' })

g3.appendTo( g2 )
g3.animate( { 'transform' : 'r360,75,75' },4000)

r4 = s.rect(-50,-50,100,100,20,20).attr({ 'fill': "green", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c4 = s.circle(25,25,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c4' })
g4 = s.group(r4,c4).attr({ 'id': 'g4' });
g4.appendTo( g3 )
g4.animate( { 'transform' : 'r360,25,25' },4000)
&lt;/script&gt;

&lt;p&gt;上述 Snap 繪圖程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;script type="text/javascript" src="./../data/w11/snap/snap.svg-min.js"&gt;&lt;/script&gt;

&lt;svg id="svgout" width="800" height="500" viewBox="0 0 800 500"&gt;&lt;/svg&gt;

&lt;script type="text/python"&gt;
from browser import alert
from browser import window, document
# 將 Snap 轉為 Brython 物件
snap = window.Snap.new
# 使用 id 為 "svgout" 的 svg 標註進行繪圖
s = snap("#svgout")

offsetY = 50

# 是否標示出繪圖範圍
#borderRect = s.rect(0,0,800,640,10,10).attr({ 'stroke': "silver", 'fill': "silver", 'strokeWidth': "3" })

g = s.group().transform('t250,120')
r0 = s.rect(150,150,100,100,20,20).attr({ 'fill': "orange", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c0 = s.circle(225,225,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4"  }).attr({ 'id': 'c0' })
g0 = s.group( r0,c0 ).attr({ 'id': 'g0' })
#g0.animate({ 'transform' : 't250,120r360,225,225' },4000)
g0.appendTo( g )
g0.animate({ 'transform' : 'r360,225,225' },4000)
# 讓 g0 可以拖動
g0.drag()

r1 = s.rect(100,100,100,100,20,20).attr({ 'fill': "red", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c1 = s.circle(175,175,10).attr({ 'fill': "silver", 'stroke': "black" , 'strokeWidth': "4"}).attr({ 'id': 'c1' })
g1 = s.group( r1,c1 ).attr({ 'id': 'g1' })
g1.appendTo( g0 ).attr({ 'id': 'g1' })
g1.animate({ 'transform' : 'r360,175,175' },4000)

r2 = s.rect(50,50,100,100,20,20).attr({ 'fill': "blue", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c2 = s.circle(125,125,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c2' })
g2 = s.group(r2,c2).attr({ 'id': 'g2' })

g2.appendTo( g1 );
g2.animate( { 'transform' : 'r360,125,125' },4000);

r3 = s.rect(0,0,100,100,20,20).attr({ 'fill': "yellow", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c3 = s.circle(75,75,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c3' })
g3 = s.group(r3,c3).attr({ 'id': 'g3' })

g3.appendTo( g2 )
g3.animate( { 'transform' : 'r360,75,75' },4000)

r4 = s.rect(-50,-50,100,100,20,20).attr({ 'fill': "green", 'opacity': "0.8", 'stroke': "black", 'strokeWidth': "2" })
c4 = s.circle(25,25,10).attr({ 'fill': "silver", 'stroke': "black", 'strokeWidth': "4" }).attr({ 'id': 'c4' })
g4 = s.group(r4,c4).attr({ 'id': 'g4' });
g4.appendTo( g3 )
g4.animate( { 'transform' : 'r360,25,25' },4000)
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;svg id="svgout1" width="800" height="500" viewBox="0 0 800 500"&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;script type="text/python"&gt;
from browser import window
from browser import document
# 將 Snap 轉為 Brython 物件
snap = window.Snap.new

s = snap("#svgout1")
# 建立物件時, 同時設定 id 名稱
r = s.rect(10,10,100,100).attr({'id': 'rect'})
c = s.circle(100,100,50).attr({'id': 'circle'})
r.attr('fill', 'red')
c.attr({ 'fill': 'blue', 'stroke': 'black', 'strokeWidth': 10 })
r.attr({ 'stroke': '#123456', 'strokeWidth': 20 })
s.text(180,100, '點按一下圖形').attr({'fill' : 'blue',  'stroke': 'blue', 'stroke-width': 0.2 })

g = s.group().attr({'id': 'tux'})

def hoverover(ev):
    g.animate({'transform': 's1.2r45,t180,20'}, 1000, window.mina.bounce)

def hoverout(ev):
    g.animate({'transform': 's1r0,t180,20'}, 1000, window.mina.bounce) 

# callback 函式
def onSVGLoaded(data):
    #s.append(data)
    g.append(data)
    #g.hover(hoverover, hoverout )
    g.text(300,100, '將滑鼠指向企鵝')

# 利用 window.Snap.load 載入 svg 檔案
tux = window.Snap.load("https://chiamingyen.github.io/kmolab_data/files/Dreaming_tux.svg", onSVGLoaded)
g.transform('t180,20')

# 與視窗事件對應的函式
def rtoyellow(ev):
    r.attr('fill', 'yellow')

def ctogreen(ev):
    c.attr('fill', 'green')

# 根據物件 id 綁定滑鼠事件執行對應函式
document['rect'].bind('click', rtoyellow)
document['circle'].bind('click', ctogreen)
document['tux'].bind('mouseover', hoverover)
document['tux'].bind('mouseleave', hoverout)
&lt;/script&gt;

&lt;p&gt;上述繪圖程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;svg id="svgout1" width="800" height="500" viewBox="0 0 800 500"&gt;&lt;/svg&gt;

&lt;script type="text/python"&gt;
from browser import window
from browser import document
# 將 Snap 轉為 Brython 物件
snap = window.Snap.new

s = snap("#svgout1")
# 建立物件時, 同時設定 id 名稱
r = s.rect(10,10,100,100).attr({'id': 'rect'})
c = s.circle(100,100,50).attr({'id': 'circle'})
r.attr('fill', 'red')
c.attr({ 'fill': 'blue', 'stroke': 'black', 'strokeWidth': 10 })
r.attr({ 'stroke': '#123456', 'strokeWidth': 20 })
s.text(180,100, '點按一下圖形').attr({'fill' : 'blue',  'stroke': 'blue', 'stroke-width': 0.2 })

g = s.group().attr({'id': 'tux'})

def hoverover(ev):
    g.animate({'transform': 's1.2r45,t180,20'}, 1000, window.mina.bounce)

def hoverout(ev):
    g.animate({'transform': 's1r0,t180,20'}, 1000, window.mina.bounce) 

# callback 函式
def onSVGLoaded(data):
    #s.append(data)
    g.append(data)
    #g.hover(hoverover, hoverout )
    g.text(300,100, '將滑鼠指向企鵝')

# 利用 window.Snap.load 載入 svg 檔案
tux = window.Snap.load("https://chiamingyen.github.io/kmolab_data/files/Dreaming_tux.svg", onSVGLoaded)
g.transform('t180,20')

# 與視窗事件對應的函式
def rtoyellow(ev):
    r.attr('fill', 'yellow')

def ctogreen(ev):
    c.attr('fill', 'green')

# 根據物件 id 綁定滑鼠事件執行對應函式
document['rect'].bind('click', rtoyellow)
document['circle'].bind('click', ctogreen)
document['tux'].bind('mouseover', hoverover)
document['tux'].bind('mouseleave', hoverout)
&lt;/script&gt;
&lt;/pre&gt;

&lt;p&gt;心得:第十一週作業加入了py.的程式編譯一開始不太懂是多跟同學討論後才了解一些大概&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第十週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-shi-zhou-zuo-ye.html" rel="alternate"></link><published>2017-04-27T12:08:00+08:00</published><updated>2017-04-27T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-04-27:./xie-tong-chan-pin-she-ji-shi-xi-di-shi-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;倉儲協同&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;1.+法運算&lt;/p&gt;
&lt;p&gt;2.+法運算&lt;/p&gt;
&lt;p&gt;3.*法運算&lt;/p&gt;
&lt;p&gt;4./法運算&lt;/p&gt;


&lt;h2&gt;1.+法運算&lt;/h2&gt;
&lt;p&gt;+法程式碼(add.py)
&lt;pre class="brush: python"&gt;
def add (a,b): //def用於定義函式和類型的方法
    return a+b //將a+b值傳回主程式中
&lt;/pre&gt;
+法程式碼(print.py)
&lt;pre class="brush: python"&gt;
import sys //插入sys檔案中所有函式
sys.path.append("./m1")//資料夾路徑
import add //導入 add.py&lt;/p&gt;
&lt;p&gt;sum = add.add (1,2) //乘法演算&lt;/p&gt;
&lt;p&gt;print(sum) //輸出結果
&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;2.-法運算&lt;/h2&gt;
&lt;p&gt;-法程式碼(add.py)
&lt;pre class="brush: python"&gt;
def add (a,b): //def用於定義函式和類型的方法
    return a-b //將a-b值傳回主程式中
&lt;/pre&gt;
-法程式碼(print.py)
&lt;pre class="brush: python"&gt;
import sys //插入sys檔案中所有函式
sys.path.append("./m1") //資料夾路徑
import add //導入 add.py&lt;/p&gt;
&lt;p&gt;sum = add.add (1,2) //乘法演算&lt;/p&gt;
&lt;p&gt;print(sum) //輸出結果
&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;3.*法運算&lt;/h2&gt;
&lt;p&gt;乘法程式碼(add.py)
&lt;pre class="brush: python"&gt;
def add (a,b): //def用於定義函式和類型的方法
    return a* b //將a乘b值傳回主程式中
&lt;/pre&gt;
乘法程式碼(print.py)
&lt;pre class="brush: python"&gt;
import sys //插入sys檔案中所有函式
sys.path.append("./m1") //資料夾路徑
import add //導入 add.py&lt;/p&gt;
&lt;p&gt;sum = add.add (1,2) //乘法演算&lt;/p&gt;
&lt;p&gt;print(sum) //輸出結果
&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;4./法運算&lt;/h2&gt;
&lt;p&gt;/法程式碼(add.py)
&lt;pre class="brush: python"&gt;
def add (a,b): //def用於定義函式和類型的方法
    return a/b //將a/b值傳回主程式中
&lt;/pre&gt;
/法程式碼(print.py)
&lt;pre class="brush: python"&gt;
import sys//插入sys檔案中所有函式
sys.path.append("./m1") //資料夾路徑
import add//導入 add.py&lt;/p&gt;
&lt;p&gt;sum = add.add (1,2) // /法演算&lt;/p&gt;
&lt;p&gt;print(sum) //輸出結果
&lt;/pre&gt;&lt;/p&gt;
&lt;h2&gt;5.操作影片:&lt;/h2&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DBFp3QxJmf0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;6.心得:&lt;/h2&gt;
&lt;p&gt;第十周的這運算看似簡單,但其實需要去更了解程式的編譯和寫法&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第九週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-jiu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-04-20T12:08:00+08:00</published><updated>2017-04-20T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-04-20:./xie-tong-chan-pin-she-ji-shi-xi-di-jiu-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;期中作業&lt;/p&gt;
&lt;p&gt;1.Fossil Server 實習查驗&lt;/p&gt;
&lt;p&gt;2.四連桿機構協同 Trace Point 查驗&lt;/p&gt;
&lt;p&gt;3.Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/p&gt;
&lt;p&gt;4.分組協同零件展示&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h2&gt;1.Fossil Server 實習查驗&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://mde2a2.kmol.info/midterm/ag7/index"&gt;ag7期中考報告 fossil &lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2.Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;利用OnShape畫Fourbar Walker製作影片&lt;/p&gt;&lt;/p&gt;
&lt;h1&gt;OnShape零件繪製-1&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/214962173" width="640" height="361" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/214962173"&gt;國立虎尾科技大學 機械設計系 協同產品設計實習 40423143 楊智勝 ONSHAPE期中四連桿零件繪製&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h1&gt;OnShape零件繪製-2&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/214962047" width="640" height="361" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/214962047"&gt;國立虎尾科技大學 機械設計系 協同產品設計實習 40423143 楊智勝 ONSHAPE期中四連桿&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;4.分組協同零件展示&lt;/h2&gt;
&lt;p&gt;分組協同零件展示&lt;/p&gt;

&lt;p&gt;&lt;link href="./../work/madeleine/src/css/Madeleine.css" rel="stylesheet"&gt;
&lt;script src="./../work/madeleine/src/stats.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/detector.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/three.min.js"&gt;&lt;/script&gt;
&lt;script src="./../work/madeleine/src/Madeleine.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;div id="target" class="madeleine"&gt;&lt;/div&gt;

&lt;script&gt;
window.onload = function(){
    var madeleine = new Madeleine({
      target: 'target', // target div id
      data: './../data/Fourbar1.stl', // data path
      path: './../work/madeleine/src/' // path to source directory from current html file
    });
}; 
&lt;/script&gt;

&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r68/three.min.js"
&gt;&lt;/script&gt;

&lt;script src="https://rawgit.com/mrdoob/three.js/master/examples/js/controls/TrackballControls.js"
&gt;&lt;/script&gt;

&lt;script src="./../data/w9/loader.js"&gt;&lt;/script&gt;

&lt;script src="./../data/w9/stl.js"&gt;&lt;/script&gt;

&lt;div&gt;
select stl file: &lt;input type="file" id="file" /&gt; or drop stl file
&lt;/div&gt;

&lt;div id="view"&gt;&lt;/div&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第八週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-ba-zhou-zuo-ye.html" rel="alternate"></link><published>2017-04-13T12:08:00+08:00</published><updated>2017-04-13T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-04-13:./xie-tong-chan-pin-she-ji-shi-xi-di-ba-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;期中自評跟總結影片和心得&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第八週&lt;/h1&gt;
&lt;h1&gt;期中自評 自評80分&lt;/h1&gt;
&lt;h1&gt;第七週&lt;/h1&gt;
&lt;h1&gt;補齊上週的ONSHAPE八連桿組裝&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DbTznJ-7adw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;第六週&lt;/h1&gt;
&lt;h1&gt;ONSHAPE八連桿零件-1&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vFPkivUgtog" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;ONSHAPE八連桿零件-2&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/psThVfUdbS4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;第六週ONSHAPE零件操作&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/D8X0iHyTuxk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;ONSHAPE零件組合&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3QTLxLLvx8c" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pRknmdruorQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;V-REP&lt;/h1&gt;
&lt;iframe src="https://player.vimeo.com/video/214871387" width="640" height="361" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/214871387"&gt;國立虎尾科技大學 機械設計工程系 協同產品設計實習 40423143 v-rep 4link 第一段&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h1&gt;第五週&lt;/h1&gt;
&lt;p&gt;1.為各班各組在 https://mde2a2.kmol.info 主機上建立 cdbg1(完成後可直接連結至 cdbg1 倉儲, 交由組長管理) ~ cdbg8, 以及 cdag1 ~ cdag8 等線上 Fossil SCM 倉儲, 用來管理各組協同產品設計實習過程中的純文件檔案&lt;/p&gt;
&lt;p&gt;2.單連桿製作及導入v-rep&lt;/p&gt;
&lt;h1&gt;導入v-rep&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/AOnuarT2YjY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;零件繪製&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/a1FCpIUkUiA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;第四週&lt;/h1&gt;
&lt;p&gt;第七組FOSSIL SCM連結&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde2a2.kmol.info/cdag7/home"&gt;https://mde2a2.kmol.info/cdag7/home&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;第三週翻譯英文影片&lt;/h1&gt;
&lt;h1&gt;第二週影片  4連桿&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207650695" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/207650695"&gt;40423143-4連桿&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件一&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Hf0Zo4Ql870" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件二&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ptTiyfvMJmQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件三&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DW_GxElaivM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;第一週上課筆記&lt;/h1&gt;
&lt;p&gt;1.利用solvespace及onshape組裝四連桿機構
2.ipv4和ipv6設定 
3.分組方式,如何更有效的決定 
4.小組組織跟分工的重要性 
5.要主動教導不會的同學
6.ipcofig設定&lt;/p&gt;
&lt;h1&gt;更改stunnel設定檔ip位址&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Jc7H63UEVuo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;上課心得:第一週上課,分組應要有更有效率的辦法,小組要多溝通分工,雖然組員都不是很會但相信第二組是可以的&lt;/p&gt;
&lt;h1&gt;零件一&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Nb_GeFtPftA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;零件二&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/iN1rU-hcgFQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;零件三&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DW_GxElaivM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;組裝影片&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4rYp4PGxEvA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;組合圖&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="./../picture/fourbar_move.html" width="600" height="450"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2&gt;修課心得:這半學期除了自己畫了這些零件外,還教會組員如何推資料跟畫零件,每天都應該要排進度,然後接受新的挑戰跟難關,可能還沒辦法做到最好,但至少我們正在努力&lt;/h2&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第七週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-qi-zhou-zuo-ye.html" rel="alternate"></link><published>2017-04-06T12:08:00+08:00</published><updated>2017-04-06T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-04-06:./xie-tong-chan-pin-she-ji-shi-xi-di-qi-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;上課筆記&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第七週任務 補齊前面缺的東西&lt;/h1&gt;
&lt;h1&gt;ONSHAPE八連桿零件-1&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vFPkivUgtog" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;ONSHAPE八連桿零件-2&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/psThVfUdbS4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;ONSHAPE八連桿組裝&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DbTznJ-7adw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;心得:上課要認真&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第六週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-liu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-30T12:08:00+08:00</published><updated>2017-03-30T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-03-30:./xie-tong-chan-pin-she-ji-shi-xi-di-liu-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt;ONSHAPE四連桿零件操作影片和零件組合&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第六週ONSHAPE零件操作&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/D8X0iHyTuxk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;ONSHAPE零件組合&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3QTLxLLvx8c" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pRknmdruorQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;V-REP&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/214871387" width="640" height="361" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/214871387"&gt;國立虎尾科技大學 機械設計工程系 協同產品設計實習 40423143 v-rep 4link 第一段&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;心得:過程還算順利&lt;/p&gt;
&lt;h1&gt;ONSHAPE八連桿零件-1&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/vFPkivUgtog" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;ONSHAPE八連桿零件-2&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/psThVfUdbS4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;GITHUB除錯,身為組長排除萬難都要更新成功&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mk2h2F0dFW8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;心得:頗有成就感&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第五週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-wu-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-23T12:08:00+08:00</published><updated>2017-03-23T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-03-23:./xie-tong-chan-pin-she-ji-shi-xi-di-wu-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; 把零件導入v-rep操作影片&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第五週&lt;/h1&gt;
&lt;p&gt;1.為各班各組在 https://mde2a2.kmol.info 主機上建立 cdbg1(完成後可直接連結至 cdbg1 倉儲, 交由組長管理) ~ cdbg8, 以及 cdag1 ~ cdag8 等線上 Fossil SCM 倉儲, 用來管理各組協同產品設計實習過程中的純文件檔案&lt;/p&gt;
&lt;p&gt;2.單連桿製作及導入v-rep&lt;/p&gt;
&lt;h1&gt;導入v-rep&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/AOnuarT2YjY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;上課心得:入v-rep零件還算輕鬆&lt;/p&gt;
&lt;h1&gt;零件繪製&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/a1FCpIUkUiA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第四週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-si-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-16T12:08:00+08:00</published><updated>2017-03-16T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-03-16:./xie-tong-chan-pin-she-ji-shi-xi-di-si-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; FOSSIL SCM連結跟概述&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第四週&lt;/h1&gt;
&lt;p&gt;第七組FOSSIL SCM連結&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mde2a2.kmol.info/cdag7/home"&gt;https://mde2a2.kmol.info/cdag7/home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fossil SCM 是一套軟體配置管理 (Software Configuration Management) 系統, 其中包含分散式版次控管 (DVC, Distributed Version Control) 、Wiki 、Bug Tracking 與 Technote 等功能, 可以用來控制及追蹤軟體開發專案, 並且紀錄專案開發歷程, 在協同產品設計實習課程中, 我們除了使用 git、github 與 bitbucket 之外, 將要在區域網路與系上主幹中, 配置每班兩台的 Fossil SCM 實習主機.&lt;/p&gt;
&lt;p&gt;上課心得:新架構,新體驗
當組長要幫助不會的同學,還要分配工作,讓我學到更多東西例如:要多溝通,和多了解程式的意思&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第三週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-san-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-09T12:08:00+08:00</published><updated>2017-03-09T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-03-09:./xie-tong-chan-pin-she-ji-shi-xi-di-san-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; 翻譯影片&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第三週影片&lt;/h1&gt;
&lt;h1&gt;影片二:&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207229488" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;內容:
The 2017 HyperWorks release has a lot 在2017年HyperWorks發行很多版本&lt;/p&gt;
&lt;p&gt;of enhancements to the modeling and assembly capabilities 對軟件的建模和組裝能力的增強&lt;/p&gt;
&lt;p&gt;So we put in a new parts browser with a built-in part library 所以我們在一個新的零件瀏覽器與一個內置零件庫&lt;/p&gt;
&lt;p&gt;The part library is a great tool for storing and loading work in progress 零件庫是用於存儲和加載正在進行工作的一個很好的工具&lt;/p&gt;
&lt;p&gt;So you can store a catalog of all the common parts 因此，您可以存儲所有公共部分的目錄&lt;/p&gt;
&lt;p&gt;that a workgroup needs to use,so they can download their models from their PLM system 工作組需要使用，因此他們可以從他們的PLM系統下載他們的模型&lt;/p&gt;
&lt;p&gt;and store them locally in a parts library for a work in progress 並將它們本地存儲在正在進行的工作的零件庫中&lt;/p&gt;
&lt;p&gt;And it keeps revision control on them, 他保持對它們的修訂控制&lt;/p&gt;
&lt;p&gt;so they can back up to the different versions and reload. 所以他們可以備份到不同的版本並重新加載。&lt;/p&gt;
&lt;p&gt;And they can also build different configurations now of their models. 他們也可以建立不同的配置到他們現在的的模型。&lt;/p&gt;
&lt;p&gt;In the configuration modeler now 現在在配置建模器&lt;/p&gt;
&lt;p&gt;they can import parts from part library and then group 他們可以從零件庫導入零件然後分組&lt;/p&gt;
&lt;p&gt;them into what we call part sets,which are 他們變成我們所說的部分集&lt;/p&gt;
&lt;p&gt;convenient groupings of parts. 即零件方便分組&lt;/p&gt;
&lt;p&gt;And then they can drag those parts together into assemblies, 然後他們可以將這些部分一起拖入組件&lt;/p&gt;
&lt;p&gt;and configure them for different load 並為不同負載配置它們的&lt;/p&gt;
&lt;p&gt;cases or different variations of their models. 情況或他們的模型的不同變化&lt;/p&gt;
&lt;p&gt;the other feature of haveing parts in the software 硬件部分的軟件中的另一個特點&lt;/p&gt;
&lt;p&gt;is we do part instancing now,too. 我們現在也做實例化&lt;/p&gt;
&lt;p&gt;So if you load in a part that has 所以如果你加載在一個部分&lt;/p&gt;
&lt;p&gt;multiple instances through the model,we support that. 我們支持多個實例通過模型&lt;/p&gt;
&lt;p&gt;We don't have to create multiple copies of it. 我們不必創建它的多個副本&lt;/p&gt;
&lt;p&gt;We can actually do the instancing,which is very memory efficient. 我們可以做實際，這是非常有效的記憶。&lt;/p&gt;
&lt;p&gt;Also in the model building assembly 也在模型建築組裝&lt;/p&gt;
&lt;p&gt;tool set is enhanced ID management as well. 工具集也是增強的ID管理&lt;/p&gt;
&lt;p&gt;So not only can we assign IDs based on different rules 因此，我們不僅可以根據不同的規則分配ID&lt;/p&gt;
&lt;p&gt;that you define in the software,but you can import ID systems 您可以在軟件中定義，但可以導入ID系統&lt;/p&gt;
&lt;p&gt;form spreadsheets,XML files,databases, 形式電子表格，XML文件，數據庫，&lt;/p&gt;
&lt;p&gt;and so forth,that are then used when 等等，然後在使用&lt;/p&gt;
&lt;p&gt;it does the renumbering or the assembly of the model. 它進行重新編號或模型的組裝&lt;/p&gt;
&lt;p&gt;it has to resolve part collisions. 它必須解決部分碰撞。&lt;/p&gt;
&lt;p&gt;Really important part of doing model assembly 做模型組裝重要的部分&lt;/p&gt;
&lt;p&gt;is connecting all those parts together. 將所有這些部分連接在一起&lt;/p&gt;
&lt;p&gt;Connectors are really vital to the overall assembly process. 連接器對整個裝配過程至關重要。&lt;/p&gt;
&lt;p&gt;The quality of the connector that you create really 您真正創建的連接器的質量&lt;/p&gt;
&lt;p&gt;determines the outcome of the quality 確定質量的結果&lt;/p&gt;
&lt;p&gt;of the overall assembled model as well. 對整體組裝模型&lt;/p&gt;
&lt;p&gt;So for us to get a good high fidelity solution, 所以為我們得到一個良好的高保真度解決方案&lt;/p&gt;
&lt;p&gt;you have to have a really good connection generation as well. 你必須有一個非常好的連接生成&lt;/p&gt;
&lt;p&gt;翻譯心得:
這是由會英文的組員翻的,是有嘗試去聽但聽不是很懂&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第二週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-er-zhou-zuo-ye.html" rel="alternate"></link><published>2017-03-02T12:08:00+08:00</published><updated>2017-03-02T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-03-02:./xie-tong-chan-pin-she-ji-shi-xi-di-er-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; solvespace零件 四連桿繪製操作影片&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h1&gt;第二週影片  4連桿&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207650695" width="640" height="480" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/207650695"&gt;40423143-4連桿&lt;/a&gt; from &lt;a href="https://vimeo.com/user44207171"&gt;楊智勝&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件一&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Hf0Zo4Ql870" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件二&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ptTiyfvMJmQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;solvespace零件三&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DW_GxElaivM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;心得:solvespace操作要更熟練一點,中間都會小卡住&lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>設計二甲座位表</title><link href="./she-ji-er-jia-zuo-wei-biao.html" rel="alternate"></link><published>2017-02-28T12:08:00+08:00</published><updated>2017-02-28T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-02-28:./she-ji-er-jia-zuo-wei-biao.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; 座位表和分組名單&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h2&gt;設計二甲座位表&lt;/h2&gt;
&lt;p&gt;&lt;a href="./../2017/seet.html"&gt;seet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;40423143 楊智勝是第二組組長
組員有:
40423120
40423123
40423124
40423141
40423146
40423147
40423154
40423114&lt;/p&gt;
&lt;p&gt;上課心得:需要更有效率的分組方式 &lt;/p&gt;</summary><category term="seat table"></category></entry><entry><title>協同產品設計實習 第一週作業</title><link href="./xie-tong-chan-pin-she-ji-shi-xi-di-yi-zhou-zuo-ye.html" rel="alternate"></link><published>2017-02-25T12:08:00+08:00</published><updated>2017-02-25T12:08:00+08:00</updated><author><name>43</name></author><id>tag:,2017-02-25:./xie-tong-chan-pin-she-ji-shi-xi-di-yi-zhou-zuo-ye.html</id><summary type="html">&lt;p&gt;&lt;b&gt;&lt;font color="red"&gt; onshape零件繪製和更改stunnel設定檔ip位址&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;


&lt;h2&gt;上課筆記&lt;/h2&gt;
&lt;p&gt;1.利用solvespace及onshape組裝四連桿機構
2.ipv4和ipv6設定 
3.分組方式,如何更有效的決定 
4.小組組織跟分工的重要性 
5.要主動教導不會的同學
6.ipcofig設定&lt;/p&gt;
&lt;h1&gt;更改stunnel設定檔ip位址&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Jc7H63UEVuo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;上課心得:第一週上課,分組應要有更有效率的辦法,小組要多溝通分工,雖然組員都不是很會但相信第二組是可以的&lt;/p&gt;
&lt;h1&gt;零件一&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Nb_GeFtPftA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;零件二&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/iN1rU-hcgFQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;零件三&lt;/h1&gt;
&lt;p&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DW_GxElaivM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;組裝影片&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4rYp4PGxEvA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1&gt;組合圖&lt;/h1&gt;
&lt;p&gt;&lt;iframe src="./../picture/fourbar_move.html" width="600" height="450"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h1&gt;組裝心得:算是簡單&lt;/h1&gt;</summary><category term="PPT"></category></entry></feed>